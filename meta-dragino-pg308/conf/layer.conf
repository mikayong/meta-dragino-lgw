# We have a conf and classes directory, add to BBPATH
BBPATH .= ":${LAYERDIR}"

# We have recipes-* directories, add to BBFILES
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
	${LAYERDIR}/recipes-*/*/*.bbappend"

BBFILE_COLLECTIONS += "dragino-pg308"

BBFILE_PATTERN_dragino-pg308 = "^${LAYERDIR}/"

# Remove alsa
MACHINE_FEATURES_remove = "alsa"

# Boot Raspberry Pi using u-boot
RPI_USE_U_BOOT = "1"

# Configure mender features
MENDER_FEATURES_ENABLE_append = " mender-install mender-uboot mender-image mender-image-sd"
MENDER_FEATURES_DISABLE_append = " mender-grub mender-image-uefi"

# These are simply to align with how the "stock" RPi machines are
# configured.
MENDER_PARTITION_ALIGNMENT = "4194304"

# Mender storage total and data-partition size.
MENDER_BOOT_PART_SIZE_MB = "40"
MENDER_STORAGE_TOTAL_SIZE_MB = "2048"
MENDER_DATA_PART_SIZE_MB = "1024"

# To be able to update the Linux kernel Mender
# uses an image that resides on the root file system and below line
# ensures that they are installed to /boot
IMAGE_INSTALL_append = " kernel-image kernel-devicetree"

# Mender will build an image called `sdimg` which shall be used instead
# of the `rpi-sdimg`.
IMAGE_FSTYPES_remove += " rpi-sdimg"

# Use the same type here as specified in ARTIFACTIMG_FSTYPE to avoid
# building an unneeded image file.
SDIMG_ROOTFS_TYPE = "ext4"

# Generate compressed sdimg.
IMAGE_FSTYPES += "sdimg.gz"

# Configuration for the rootfs overlay.
INITRAMFS_IMAGE_NAME = "rootfs-overlay-initramfs-${MACHINE}"
INITRAMFS_TASK =  "rootfs-overlay-initramfs:do_image_complete"

